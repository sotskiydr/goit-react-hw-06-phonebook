{"version":3,"sources":["components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","store/action.js","store/reducer.js","store/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactsList.js","App.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","deleteContact","createAction","filterContacts","addContact","contactsReducer","createReducer","state","payload","name","number","newItem","id","nanoid","isUnique","some","el","console","log","alert","filter","filterReducer","_","combineReducers","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","rootReducer","app","persistReducer","appReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ContactForm","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","value","className","styles","preventDefault","label","input","type","placeholder","pattern","title","required","onChange","submit","Filter","useSelector","dispatch","useDispatch","actions","target","ContactsList","items","toLowerCaseFilter","toLowerCase","includes","list","map","item","span","btn","onClick","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f14ea756.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3wSXY\",\"item\":\"ContactList_item__3lf8n\",\"btn\":\"ContactList_btn__LjK5L\",\"span\":\"ContactList_span__2n2ga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2pNgv\",\"input\":\"Filter_input__YmgBH\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const deleteContact = createAction('delete');\nexport const filterContacts = createAction('filter');\nexport const addContact = createAction('add');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nimport { addContact, deleteContact, filterContacts } from './action';\n\nconst contactsReducer = createReducer([], {\n  [addContact]: (state, { payload }) => {\n    const { name, number } = payload;\n    const newItem = {\n      id: nanoid(),\n      name: name,\n      number: number,\n    };\n    let isUnique = state.some(el => el.name === name);\n    console.log(isUnique);\n    if (!isUnique) {\n      return [...state, newItem];\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n    return;\n  },\n  [deleteContact]: (state, { payload }) => [\n    ...state.filter(el => el.id !== payload),\n  ],\n});\n\nconst filterReducer = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport appReducer from './reducer';\nimport logger from 'redux-logger';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({\n  app: persistReducer(persistConfig, appReducer),\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React, { useState } from 'react';\nimport styles from './ContactForm.module.scss';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    if (e.currentTarget.name === 'name') setName(e.currentTarget.value);\n    if (e.currentTarget.name === 'number') setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({\n      name: name,\n      number: number,\n    });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles['contact-form']} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Liubov Murarova\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"099-999-99-99\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.submit} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../store/action';\nimport styles from './Filter.module.scss';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.app.filter);\n  const dispatch = useDispatch();\n  return (\n    <div className={styles.filter}>\n      <label className={styles.label}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={filter}\n          onChange={e => {\n            dispatch(actions.filterContacts(e.target.value));\n          }}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './ContactList.module.scss';\nimport * as actions from '../../store/action';\n\nconst ContactsList = () => {\n  const items = useSelector(({ app }) => {\n    const toLowerCaseFilter = app.filter.toLowerCase();\n    const items = app.contacts.filter(el =>\n      el.name.toLowerCase().includes(toLowerCaseFilter),\n    );\n    return items;\n  });\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={styles.list}>\n      {items.map(el => {\n        return (\n          <li className={styles.item} key={el.id}>\n            <span className={styles.span}>\n              {el.name}: {el.number}\n            </span>\n            <button\n              className={styles.btn}\n              type=\"button\"\n              id={el.id}\n              onClick={() => {\n                dispatch(actions.deleteContact(el.id));\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactsList from './components/ContactList/ContactsList';\nimport { useDispatch } from 'react-redux';\nimport * as actions from './store/action';\nimport './App.css';\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  return (\n    <main className=\"main\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm\n        onSubmit={(name, number) => dispatch(actions.addContact(name, number))}\n      />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </main>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './store/store';\nimport './index.css';\nimport App from './App';\n\nconsole.log(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-form\":\"ContactForm_contact-form__2H_yu\",\"label\":\"ContactForm_label__3KgVy\",\"input\":\"ContactForm_input__3emgF\",\"submit\":\"ContactForm_submit__2xTHf\"};"],"sourceRoot":""}